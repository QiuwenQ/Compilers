int a;
bool b;
void c;
struct Point point1;
struct Point {
    int a;
};
struct Point {
    bool b;
    void c;
    int d;
};
int func0() {
}
int func1() {
    int a1;
}
int func(int a) {
}
void func1(bool a) {
    int a1;
}
void func1(bool a) {
    int a1;
    a = (b);
}
bool func1(int a, bool b, void c) {
    int a1;
}
int func2() {
    bool a2;
    a = (b);
    a = ((b).c);
    a = (345);
    a = ("hi");
    a = (true);
    a = (false);
    a = (5);
    a = (func());
    a = (func(a, b, c));
    b = ((b + b));
    b = ((b - b));
    b = ((b * b));
    b = ((b / b));
    b = ((!b));
    b = ((b && b));
    b = ((b || b));
    b = ((b == b));
    b = ((b != b));
    b = ((b < b));
    b = ((b > b));
    b = ((b <= b));
    b = ((b >= b));
    b = ((-"hi"));
    c = ((((((a + b) - ((c * d) / e)) + (!f)) && g) || h));
    c = ((((a).b).c).d);
    c = (a = (b = (c = (d))));
    d = (((1 + 1) + 1));
    d = (((1 - 1) - 1));
    d = (((1 * 1) * 1));
    d = (((1 / 1) / 1));
    loc++;
    loc--;
    cin >> (loc).id;
    cout << (exp + exp);
    if((a && a)){
        int a;
        a = (b);
        if((c && c)){
            int dec;
            dec = (a);
        } else {
            int dec;
            dec = (a);
        }
    }
    while((a != b)){
        int dec;
        dec = (a);
    }
    repeat((a != b)){
        int dec;
        dec = (a);
    }
    func1(b, c);
    return (a == b);
    return;
}
