//Test for correct types
int x;
int y;
bool a;
bool b;
struct Point1{
	int z;
	bool c;	
};
struct Point2{
	int z;
	bool c;	
};
int f1(){}
int f2(){}
int f3(int x, bool a){
	
}
void f4(){}
bool f5(){}
int func1(){
	struct Point1 p1;
	struct Point2 p2;
	x=y;
	a=b=a;
	p1.z = p2.z;
	p1.c = p2.c;
	x=1+y;
	x=1/y;
	x=1-y;
	x=1*y;
	x++;
	y++;
	p1.z++;
	p2.z--;
	a=1<2;
	a=1>2;
	a=1<=2;
	a=1>=2;
	//equality
	b=(1==p2.z);//okay
	b=b==a;
	b=x==y;
	b=p1.z == p2.z;
	b=p1.c == p2.c;
	b="s1"=="s2";
	b=(1!=p2.z);//okay
	b=b!=a;
	b=x!=y;
	b=p1.z != p2.z;
	b=p1.c != p2.c;
	b="s1"!="s2";
	x=f1();//okay
	x=f3(1,true);//okay
	cin >> x;
	cin >> a;
	cout << f1();
	cout << f5();
	if (b){}
	if (true){}
	if (1<2){}
	if (1>1){}
	if (1<=1){}
	if (1>=1){}
	if (b){} else{}
	if (true){} else{}
	if (1<2){} else{}
	if (1>1){} else{}
	if (1<=1){} else{}
	if (1>=1){
	x=1*y;
	x++;
	y++;
	p1.z++;
	p2.z--;
	a=1<2;
	a=1>2;
	a=1<=2;
	a=1>=2;
	} 
	else{
		x=1*y;
	x++;
	y++;
	p1.z++;
	p2.z--;
	a=1<2;
	a=1>2;
	a=1<=2;
	a=1>=2;
	}
	while (b){} 
	while (true){}
	while (1<2){} 
	while (1>1){} 
	while (1<=1){} 
	while (1>=1){}

	

}