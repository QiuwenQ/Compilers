//Test that type errors are caught correctly
int x;
int y;
bool a;
bool b;
struct Point1{
	int z;
	bool c;	
};
struct Point2{
	int z;
	bool c;	
};
int f1(){}
int f2(){}
int f3(int x, bool a){
	
}
int func1(){
	struct Point1 p1;
	struct Point2 p2;
	x=a; //error: Type mismatch
	b=y; //error: Type mismatch
	Point1 = Point2; //error: Struct name assignment
	Point1 = Point2 = Point1;
	p1=p2; //error: Struct variable assignment
	p1=p2=p1;
	f1=f2; //error: Function assignment
	f1=f2=f2;
	p1.z = p2.c; //error: type mismatch
	//error: Arithmetic operator applied to non-numeric operand
	x=false+1; 
	x=1+false; 
	x=1+true+"string"; 
	x=1-true;
	x=1/true;
	x=1*true;
	x=1+2*"string";
	a++;
	p2.c++;
	a--;
	p2.c--;
	//error: Relational operator applied to non-numeric operand"
	a=1<true;
	a=true<1;
	a=true<false;
	a=1>true;
	a=true>1;
	a=true>false;
	a=1<=true;
	a=true<=1;
	a=true<=false;
	a=1>=true;
	a=true>=1;
	a=true>=false;
	x=true>=false;
	//equality operator
	b=x==a; //error: Type mismatch
	b=b==y; //error: Type mismatch
	b=Point1 == Point2; //error: Struct name assignment
	b=(false==1);
	b=(1=="string");
	b=p1==p2; //error: Struct variable assignment
	b=p1.z == p2.c; //error: type mismatch
		//not equals
	b=x!=a; //error: Type mismatch
	b=b!=y; //error: Type mismatch
	b=Point1 != Point2; //error: Struct name assignment
	b=(false!=1);
	b=(1!="string");
	b=p1!=p2; //error: Struct variable assignment
	b=p1.z != p2.c; //error: type mismatch
		//function
	b=f1==f2;
	b=f1!=f2;
	//function calls
	x();
	f3(1);
	x=f3(1<1,1);
	x=f3(true,1);

	
}