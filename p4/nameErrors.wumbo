#This file is for testing name analysis
int zz;
void zz; //error: non-function declared void
bool zz; //error: multiply declared identifier
int zz(){ //error: multiply declared identifier
}
struct zz{ //error: multiply declared identifier
	int temp;
};
struct Point{
	int b;
	bool k;
	int k; //error: multiply declared identifier
	int zz; #valid
};
//testing for struct access
int testStruct(int x, int y){
	struct Point a;
	struct Point x; //error: multiply declared identifier
	struct noStruct s; //error: invalid name of struct type
	int test;
	test = a.b; #valid
	test = a.b.c; //error: dot access of non-struct type
	test = a.b.c.d; //error: dot access of non-struct type
	test = noDecl.b; //error: Undeclared identifier
	test = a.c; //error: invalid struct field name
	test = test.b; //error: dot access of non-strct 
	test = undeclVar; //error: Undeclared identifier
} 
int func0(int x, bool x){ //error: non-function declared void AND multiply declared identifier
	int temp;
}
int func0(){ //error: multiply declared identifier
}
//test bad/multiply declared names and simple use of undeclard names in different scopes
int func1(int a1, void b1, bool c1, int c1){ //error: non-function declared void multiply declared identifier
	int zz; //valid
	b1 = 5; //error: undeclared identifier
	undeclFn(); //error: undeclared identifier
	if(exp){//error: undeclared identifier
		int var2;
		void var; //error: non-function declared void
		bool var2; //error: multiply declared identifier
		var2 = undecl2; //error: undeclared identifier
	} 
	if(exp){//error: undeclared identifier
		int var2;
		void var; //error: non-function declared void
		bool var2; //error: multiply declared identifier
		var2 = undecl2; //error: undeclared identifier
	} else{
		int var2;
		void var; //error: non-function declared void
		bool var2; //error: multiply declared identifier
		var2 = undecl2; //error: undeclared identifier
	}
	while(exp){//error: undeclared identifier
		int var2;
		void var; //error: non-function declared void
		bool var2; //error: multiply declared identifier
		var2 = undecl2; //error: undeclared identifier
	}
	repeat(exp){//error: undeclared identifier
		int var2;
		void var; //error: non-function declared void
		bool var2; //error: multiply declared identifier
		var2 = undecl2; //error: undeclared identifier
	}
}

//testing rest of stmt and all exp usage of undeclared names along with function call
void func2(){
	//stmt and function call
	int decl; #valid
	undecl1 = undecl2;
	undecl1.c ++;
	undecl1.c --;
	cin >> undecl1.c;
	cout << undecl1;
	return undecl1;
	undeclFn(); //error: undeclared identifier
	undeclFn(decl, undecl3, undecl4 + undecl5); 

	//exp
	decl = exp;
	decl = exp + exp1;
	decl = exp - exp1;
	decl = exp * exp1;
	decl = exp / exp1;
	decl = !exp1;
	decl = exp && exp1;
	decl = exp || exp1;
	decl = exp == exp1;
	decl = exp != exp1;
	decl = exp < exp1;
	decl = exp > exp1;
	decl = exp <= exp1;
	decl = exp >= exp1;
	decl = - exp1;
	decl = undecl1.c;
	decl = (undecl1.c);
}